########## MACROS ###########################################################################
#############################################################################################

function(conan_message MESSAGE_OUTPUT)
    if(NOT CONAN_CMAKE_SILENT_OUTPUT)
        message(${ARGV${0}})
    endif()
endfunction()


macro(conan_find_apple_frameworks FRAMEWORKS_FOUND FRAMEWORKS FRAMEWORKS_DIRS)
    if(APPLE)
        foreach(_FRAMEWORK ${FRAMEWORKS})
            # https://cmake.org/pipermail/cmake-developers/2017-August/030199.html
            find_library(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND NAME ${_FRAMEWORK} PATHS ${FRAMEWORKS_DIRS} CMAKE_FIND_ROOT_PATH_BOTH)
            if(CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND)
                list(APPEND ${FRAMEWORKS_FOUND} ${CONAN_FRAMEWORK_${_FRAMEWORK}_FOUND})
            else()
                message(FATAL_ERROR "Framework library ${_FRAMEWORK} not found in paths: ${FRAMEWORKS_DIRS}")
            endif()
        endforeach()
    endif()
endmacro()


function(conan_package_library_targets libraries package_libdir deps out_libraries out_libraries_target build_type package_name)
    unset(_CONAN_ACTUAL_TARGETS CACHE)
    unset(_CONAN_FOUND_SYSTEM_LIBS CACHE)
    foreach(_LIBRARY_NAME ${libraries})
        find_library(CONAN_FOUND_LIBRARY NAME ${_LIBRARY_NAME} PATHS ${package_libdir}
                     NO_DEFAULT_PATH NO_CMAKE_FIND_ROOT_PATH)
        if(CONAN_FOUND_LIBRARY)
            conan_message(STATUS "Library ${_LIBRARY_NAME} found ${CONAN_FOUND_LIBRARY}")
            list(APPEND _out_libraries ${CONAN_FOUND_LIBRARY})
            if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
                # Create a micro-target for each lib/a found
                string(REGEX REPLACE "[^A-Za-z0-9.+_-]" "_" _LIBRARY_NAME ${_LIBRARY_NAME})
                set(_LIB_NAME CONAN_LIB::${package_name}_${_LIBRARY_NAME}${build_type})
                if(NOT TARGET ${_LIB_NAME})
                    # Create a micro-target for each lib/a found
                    add_library(${_LIB_NAME} UNKNOWN IMPORTED)
                    set_target_properties(${_LIB_NAME} PROPERTIES IMPORTED_LOCATION ${CONAN_FOUND_LIBRARY})
                    set(_CONAN_ACTUAL_TARGETS ${_CONAN_ACTUAL_TARGETS} ${_LIB_NAME})
                else()
                    conan_message(STATUS "Skipping already existing target: ${_LIB_NAME}")
                endif()
                list(APPEND _out_libraries_target ${_LIB_NAME})
            endif()
            conan_message(STATUS "Found: ${CONAN_FOUND_LIBRARY}")
        else()
            conan_message(STATUS "Library ${_LIBRARY_NAME} not found in package, might be system one")
            list(APPEND _out_libraries_target ${_LIBRARY_NAME})
            list(APPEND _out_libraries ${_LIBRARY_NAME})
            set(_CONAN_FOUND_SYSTEM_LIBS "${_CONAN_FOUND_SYSTEM_LIBS};${_LIBRARY_NAME}")
        endif()
        unset(CONAN_FOUND_LIBRARY CACHE)
    endforeach()

    if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
        # Add all dependencies to all targets
        string(REPLACE " " ";" deps_list "${deps}")
        foreach(_CONAN_ACTUAL_TARGET ${_CONAN_ACTUAL_TARGETS})
            set_property(TARGET ${_CONAN_ACTUAL_TARGET} PROPERTY INTERFACE_LINK_LIBRARIES "${_CONAN_FOUND_SYSTEM_LIBS};${deps_list}")
        endforeach()
    endif()

    set(${out_libraries} ${_out_libraries} PARENT_SCOPE)
    set(${out_libraries_target} ${_out_libraries_target} PARENT_SCOPE)
endfunction()


########### FOUND PACKAGE ###################################################################
#############################################################################################

include(FindPackageHandleStandardArgs)

conan_message(STATUS "Conan: Using autogenerated FindOpenCV.cmake")
set(OpenCV_FOUND 1)
set(OpenCV_VERSION "4.5.1")

find_package_handle_standard_args(OpenCV REQUIRED_VARS
                                  OpenCV_VERSION VERSION_VAR OpenCV_VERSION)
mark_as_advanced(OpenCV_FOUND OpenCV_VERSION)

set(opencv_COMPONENTS opencv::core opencv::flann opencv::imgproc opencv::ml opencv::opencv_ml opencv::photo opencv::opencv_photo opencv::features2d opencv::imgcodecs opencv::videoio opencv::calib3d opencv::highgui opencv::opencv_highgui opencv::opencv_videoio opencv::opencv_imgcodecs opencv::objdetect opencv::opencv_objdetect opencv::stitching opencv::opencv_stitching opencv::video opencv::dnn opencv::opencv_dnn opencv::gapi opencv::opencv_gapi opencv::opencv_video opencv::opencv_calib3d opencv::opencv_features2d opencv::opencv_flann opencv::opencv_imgproc opencv::opencv_core)

if(opencv_FIND_COMPONENTS)
    foreach(_FIND_COMPONENT ${opencv_FIND_COMPONENTS})
        list(FIND opencv_COMPONENTS "opencv::${_FIND_COMPONENT}" _index)
        if(${_index} EQUAL -1)
            conan_message(FATAL_ERROR "Conan: Component '${_FIND_COMPONENT}' NOT found in package 'opencv'")
        else()
            conan_message(STATUS "Conan: Component '${_FIND_COMPONENT}' found in package 'opencv'")
        endif()
    endforeach()
endif()

########### VARIABLES #######################################################################
#############################################################################################


set(opencv_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_INCLUDES "C:/.conan/051250/1/include")
set(opencv_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_DEFINITIONS )
set(opencv_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)
set(opencv_COMPILE_DEFINITIONS )
set(opencv_COMPILE_OPTIONS_LIST "" "")
set(opencv_COMPILE_OPTIONS_C "")
set(opencv_COMPILE_OPTIONS_CXX "")
set(opencv_LIBRARIES_TARGETS "") # Will be filled later, if CMake 3
set(opencv_LIBRARIES "") # Will be filled later
set(opencv_LIBS "") # Same as opencv_LIBRARIES
set(opencv_SYSTEM_LIBS comctl32 gdi32 ole32 setupapi ws2_32 vfw32)
set(opencv_FRAMEWORK_DIRS )
set(opencv_FRAMEWORKS )
set(opencv_FRAMEWORKS_FOUND "") # Will be filled later
set(opencv_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")

conan_find_apple_frameworks(opencv_FRAMEWORKS_FOUND "${opencv_FRAMEWORKS}" "${opencv_FRAMEWORK_DIRS}")

mark_as_advanced(opencv_INCLUDE_DIRS
                 opencv_INCLUDE_DIR
                 opencv_INCLUDES
                 opencv_DEFINITIONS
                 opencv_LINKER_FLAGS_LIST
                 opencv_COMPILE_DEFINITIONS
                 opencv_COMPILE_OPTIONS_LIST
                 opencv_LIBRARIES
                 opencv_LIBS
                 opencv_LIBRARIES_TARGETS)

# Find the real .lib/.a and add them to opencv_LIBS and opencv_LIBRARY_LIST
set(opencv_LIBRARY_LIST opencv_ml451 opencv_photo451 opencv_highgui451 opencv_videoio451 opencv_imgcodecs451 opencv_objdetect451 opencv_stitching451 opencv_dnn451 opencv_gapi451 opencv_video451 opencv_calib3d451 opencv_features2d451 opencv_flann451 opencv_imgproc451 opencv_core451)
set(opencv_LIB_DIRS "C:/.conan/051250/1/lib")

# Gather all the libraries that should be linked to the targets (do not touch existing variables):
set(_opencv_DEPENDENCIES "${opencv_FRAMEWORKS_FOUND} ${opencv_SYSTEM_LIBS} Eigen3::Eigen3;ZLIB::ZLIB;Jasper::Jasper;PNG::PNG;JPEG::JPEG;TIFF::TIFF;OpenEXR::OpenEXR;WebP::WebP;quirc::quirc;protobuf::protobuf;ade::ade")

conan_package_library_targets("${opencv_LIBRARY_LIST}"  # libraries
                              "${opencv_LIB_DIRS}"      # package_libdir
                              "${_opencv_DEPENDENCIES}"  # deps
                              opencv_LIBRARIES            # out_libraries
                              opencv_LIBRARIES_TARGETS    # out_libraries_targets
                              ""                          # build_type
                              "opencv")                                      # package_name

set(opencv_LIBS ${opencv_LIBRARIES})

foreach(_FRAMEWORK ${opencv_FRAMEWORKS_FOUND})
    list(APPEND opencv_LIBRARIES_TARGETS ${_FRAMEWORK})
    list(APPEND opencv_LIBRARIES ${_FRAMEWORK})
endforeach()

foreach(_SYSTEM_LIB ${opencv_SYSTEM_LIBS})
    list(APPEND opencv_LIBRARIES_TARGETS ${_SYSTEM_LIB})
    list(APPEND opencv_LIBRARIES ${_SYSTEM_LIB})
endforeach()

# We need to add our requirements too
set(opencv_LIBRARIES_TARGETS "${opencv_LIBRARIES_TARGETS};Eigen3::Eigen3;ZLIB::ZLIB;Jasper::Jasper;PNG::PNG;JPEG::JPEG;TIFF::TIFF;OpenEXR::OpenEXR;WebP::WebP;quirc::quirc;protobuf::protobuf;ade::ade")
set(opencv_LIBRARIES "${opencv_LIBRARIES};Eigen3::Eigen3;ZLIB::ZLIB;Jasper::Jasper;PNG::PNG;JPEG::JPEG;TIFF::TIFF;OpenEXR::OpenEXR;WebP::WebP;quirc::quirc;protobuf::protobuf;ade::ade")

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})


########### COMPONENT opencv_core VARIABLES #############################################

set(opencv_opencv_core_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_core_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_core_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_core_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_core_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_core_DEFINITIONS )
set(opencv_opencv_core_COMPILE_DEFINITIONS )
set(opencv_opencv_core_COMPILE_OPTIONS_C "")
set(opencv_opencv_core_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_core_LIBS opencv_core451)
set(opencv_opencv_core_SYSTEM_LIBS )
set(opencv_opencv_core_FRAMEWORK_DIRS )
set(opencv_opencv_core_FRAMEWORKS )
set(opencv_opencv_core_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_core_DEPENDENCIES ZLIB::ZLIB Eigen3::Eigen3)
set(opencv_opencv_core_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_imgproc VARIABLES #############################################

set(opencv_opencv_imgproc_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_imgproc_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_imgproc_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_imgproc_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_imgproc_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_imgproc_DEFINITIONS )
set(opencv_opencv_imgproc_COMPILE_DEFINITIONS )
set(opencv_opencv_imgproc_COMPILE_OPTIONS_C "")
set(opencv_opencv_imgproc_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_imgproc_LIBS opencv_imgproc451)
set(opencv_opencv_imgproc_SYSTEM_LIBS )
set(opencv_opencv_imgproc_FRAMEWORK_DIRS )
set(opencv_opencv_imgproc_FRAMEWORKS )
set(opencv_opencv_imgproc_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_imgproc_DEPENDENCIES opencv::opencv_core Eigen3::Eigen3)
set(opencv_opencv_imgproc_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_flann VARIABLES #############################################

set(opencv_opencv_flann_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_flann_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_flann_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_flann_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_flann_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_flann_DEFINITIONS )
set(opencv_opencv_flann_COMPILE_DEFINITIONS )
set(opencv_opencv_flann_COMPILE_OPTIONS_C "")
set(opencv_opencv_flann_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_flann_LIBS opencv_flann451)
set(opencv_opencv_flann_SYSTEM_LIBS )
set(opencv_opencv_flann_FRAMEWORK_DIRS )
set(opencv_opencv_flann_FRAMEWORKS )
set(opencv_opencv_flann_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_flann_DEPENDENCIES opencv::opencv_core Eigen3::Eigen3)
set(opencv_opencv_flann_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_features2d VARIABLES #############################################

set(opencv_opencv_features2d_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_features2d_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_features2d_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_features2d_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_features2d_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_features2d_DEFINITIONS )
set(opencv_opencv_features2d_COMPILE_DEFINITIONS )
set(opencv_opencv_features2d_COMPILE_OPTIONS_C "")
set(opencv_opencv_features2d_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_features2d_LIBS opencv_features2d451)
set(opencv_opencv_features2d_SYSTEM_LIBS )
set(opencv_opencv_features2d_FRAMEWORK_DIRS )
set(opencv_opencv_features2d_FRAMEWORKS )
set(opencv_opencv_features2d_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_features2d_DEPENDENCIES opencv::opencv_core opencv::opencv_flann opencv::opencv_imgproc Eigen3::Eigen3)
set(opencv_opencv_features2d_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_calib3d VARIABLES #############################################

set(opencv_opencv_calib3d_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_calib3d_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_calib3d_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_calib3d_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_calib3d_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_calib3d_DEFINITIONS )
set(opencv_opencv_calib3d_COMPILE_DEFINITIONS )
set(opencv_opencv_calib3d_COMPILE_OPTIONS_C "")
set(opencv_opencv_calib3d_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_calib3d_LIBS opencv_calib3d451)
set(opencv_opencv_calib3d_SYSTEM_LIBS )
set(opencv_opencv_calib3d_FRAMEWORK_DIRS )
set(opencv_opencv_calib3d_FRAMEWORKS )
set(opencv_opencv_calib3d_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_calib3d_DEPENDENCIES opencv::opencv_core opencv::opencv_flann opencv::opencv_imgproc opencv::opencv_features2d Eigen3::Eigen3)
set(opencv_opencv_calib3d_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_video VARIABLES #############################################

set(opencv_opencv_video_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_video_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_video_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_video_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_video_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_video_DEFINITIONS )
set(opencv_opencv_video_COMPILE_DEFINITIONS )
set(opencv_opencv_video_COMPILE_OPTIONS_C "")
set(opencv_opencv_video_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_video_LIBS opencv_video451)
set(opencv_opencv_video_SYSTEM_LIBS )
set(opencv_opencv_video_FRAMEWORK_DIRS )
set(opencv_opencv_video_FRAMEWORKS )
set(opencv_opencv_video_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_video_DEPENDENCIES opencv::opencv_core opencv::opencv_flann opencv::opencv_imgproc opencv::opencv_features2d opencv::opencv_calib3d Eigen3::Eigen3)
set(opencv_opencv_video_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_gapi VARIABLES #############################################

set(opencv_opencv_gapi_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_gapi_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_gapi_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_gapi_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_gapi_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_gapi_DEFINITIONS )
set(opencv_opencv_gapi_COMPILE_DEFINITIONS )
set(opencv_opencv_gapi_COMPILE_OPTIONS_C "")
set(opencv_opencv_gapi_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_gapi_LIBS opencv_gapi451)
set(opencv_opencv_gapi_SYSTEM_LIBS )
set(opencv_opencv_gapi_FRAMEWORK_DIRS )
set(opencv_opencv_gapi_FRAMEWORKS )
set(opencv_opencv_gapi_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_gapi_DEPENDENCIES opencv::opencv_imgproc opencv::opencv_calib3d opencv::opencv_video ade::ade)
set(opencv_opencv_gapi_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT gapi VARIABLES #############################################

set(opencv_gapi_INCLUDE_DIRS )
set(opencv_gapi_INCLUDE_DIR "")
set(opencv_gapi_INCLUDES )
set(opencv_gapi_LIB_DIRS )
set(opencv_gapi_RES_DIRS )
set(opencv_gapi_DEFINITIONS )
set(opencv_gapi_COMPILE_DEFINITIONS )
set(opencv_gapi_COMPILE_OPTIONS_C "")
set(opencv_gapi_COMPILE_OPTIONS_CXX "")
set(opencv_gapi_LIBS )
set(opencv_gapi_SYSTEM_LIBS )
set(opencv_gapi_FRAMEWORK_DIRS )
set(opencv_gapi_FRAMEWORKS )
set(opencv_gapi_BUILD_MODULES_PATHS )
set(opencv_gapi_DEPENDENCIES opencv::opencv_gapi)
set(opencv_gapi_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_dnn VARIABLES #############################################

set(opencv_opencv_dnn_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_dnn_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_dnn_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_dnn_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_dnn_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_dnn_DEFINITIONS )
set(opencv_opencv_dnn_COMPILE_DEFINITIONS )
set(opencv_opencv_dnn_COMPILE_OPTIONS_C "")
set(opencv_opencv_dnn_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_dnn_LIBS opencv_dnn451)
set(opencv_opencv_dnn_SYSTEM_LIBS )
set(opencv_opencv_dnn_FRAMEWORK_DIRS )
set(opencv_opencv_dnn_FRAMEWORKS )
set(opencv_opencv_dnn_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_dnn_DEPENDENCIES opencv::opencv_core opencv::opencv_imgproc protobuf::protobuf)
set(opencv_opencv_dnn_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT dnn VARIABLES #############################################

set(opencv_dnn_INCLUDE_DIRS )
set(opencv_dnn_INCLUDE_DIR "")
set(opencv_dnn_INCLUDES )
set(opencv_dnn_LIB_DIRS )
set(opencv_dnn_RES_DIRS )
set(opencv_dnn_DEFINITIONS )
set(opencv_dnn_COMPILE_DEFINITIONS )
set(opencv_dnn_COMPILE_OPTIONS_C "")
set(opencv_dnn_COMPILE_OPTIONS_CXX "")
set(opencv_dnn_LIBS )
set(opencv_dnn_SYSTEM_LIBS )
set(opencv_dnn_FRAMEWORK_DIRS )
set(opencv_dnn_FRAMEWORKS )
set(opencv_dnn_BUILD_MODULES_PATHS )
set(opencv_dnn_DEPENDENCIES opencv::opencv_dnn)
set(opencv_dnn_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT video VARIABLES #############################################

set(opencv_video_INCLUDE_DIRS )
set(opencv_video_INCLUDE_DIR "")
set(opencv_video_INCLUDES )
set(opencv_video_LIB_DIRS )
set(opencv_video_RES_DIRS )
set(opencv_video_DEFINITIONS )
set(opencv_video_COMPILE_DEFINITIONS )
set(opencv_video_COMPILE_OPTIONS_C "")
set(opencv_video_COMPILE_OPTIONS_CXX "")
set(opencv_video_LIBS )
set(opencv_video_SYSTEM_LIBS )
set(opencv_video_FRAMEWORK_DIRS )
set(opencv_video_FRAMEWORKS )
set(opencv_video_BUILD_MODULES_PATHS )
set(opencv_video_DEPENDENCIES opencv::opencv_video)
set(opencv_video_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_stitching VARIABLES #############################################

set(opencv_opencv_stitching_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_stitching_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_stitching_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_stitching_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_stitching_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_stitching_DEFINITIONS )
set(opencv_opencv_stitching_COMPILE_DEFINITIONS )
set(opencv_opencv_stitching_COMPILE_OPTIONS_C "")
set(opencv_opencv_stitching_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_stitching_LIBS opencv_stitching451)
set(opencv_opencv_stitching_SYSTEM_LIBS )
set(opencv_opencv_stitching_FRAMEWORK_DIRS )
set(opencv_opencv_stitching_FRAMEWORKS )
set(opencv_opencv_stitching_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_stitching_DEPENDENCIES opencv::opencv_core opencv::opencv_flann opencv::opencv_imgproc opencv::opencv_features2d opencv::opencv_calib3d Eigen3::Eigen3)
set(opencv_opencv_stitching_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT stitching VARIABLES #############################################

set(opencv_stitching_INCLUDE_DIRS )
set(opencv_stitching_INCLUDE_DIR "")
set(opencv_stitching_INCLUDES )
set(opencv_stitching_LIB_DIRS )
set(opencv_stitching_RES_DIRS )
set(opencv_stitching_DEFINITIONS )
set(opencv_stitching_COMPILE_DEFINITIONS )
set(opencv_stitching_COMPILE_OPTIONS_C "")
set(opencv_stitching_COMPILE_OPTIONS_CXX "")
set(opencv_stitching_LIBS )
set(opencv_stitching_SYSTEM_LIBS )
set(opencv_stitching_FRAMEWORK_DIRS )
set(opencv_stitching_FRAMEWORKS )
set(opencv_stitching_BUILD_MODULES_PATHS )
set(opencv_stitching_DEPENDENCIES opencv::opencv_stitching)
set(opencv_stitching_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_objdetect VARIABLES #############################################

set(opencv_opencv_objdetect_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_objdetect_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_objdetect_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_objdetect_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_objdetect_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_objdetect_DEFINITIONS )
set(opencv_opencv_objdetect_COMPILE_DEFINITIONS )
set(opencv_opencv_objdetect_COMPILE_OPTIONS_C "")
set(opencv_opencv_objdetect_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_objdetect_LIBS opencv_objdetect451)
set(opencv_opencv_objdetect_SYSTEM_LIBS )
set(opencv_opencv_objdetect_FRAMEWORK_DIRS )
set(opencv_opencv_objdetect_FRAMEWORKS )
set(opencv_opencv_objdetect_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_objdetect_DEPENDENCIES opencv::opencv_core opencv::opencv_flann opencv::opencv_imgproc opencv::opencv_features2d opencv::opencv_calib3d Eigen3::Eigen3 quirc::quirc)
set(opencv_opencv_objdetect_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT objdetect VARIABLES #############################################

set(opencv_objdetect_INCLUDE_DIRS )
set(opencv_objdetect_INCLUDE_DIR "")
set(opencv_objdetect_INCLUDES )
set(opencv_objdetect_LIB_DIRS )
set(opencv_objdetect_RES_DIRS )
set(opencv_objdetect_DEFINITIONS )
set(opencv_objdetect_COMPILE_DEFINITIONS )
set(opencv_objdetect_COMPILE_OPTIONS_C "")
set(opencv_objdetect_COMPILE_OPTIONS_CXX "")
set(opencv_objdetect_LIBS )
set(opencv_objdetect_SYSTEM_LIBS )
set(opencv_objdetect_FRAMEWORK_DIRS )
set(opencv_objdetect_FRAMEWORKS )
set(opencv_objdetect_BUILD_MODULES_PATHS )
set(opencv_objdetect_DEPENDENCIES opencv::opencv_objdetect)
set(opencv_objdetect_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_imgcodecs VARIABLES #############################################

set(opencv_opencv_imgcodecs_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_imgcodecs_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_imgcodecs_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_imgcodecs_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_imgcodecs_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_imgcodecs_DEFINITIONS )
set(opencv_opencv_imgcodecs_COMPILE_DEFINITIONS )
set(opencv_opencv_imgcodecs_COMPILE_OPTIONS_C "")
set(opencv_opencv_imgcodecs_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_imgcodecs_LIBS opencv_imgcodecs451)
set(opencv_opencv_imgcodecs_SYSTEM_LIBS )
set(opencv_opencv_imgcodecs_FRAMEWORK_DIRS )
set(opencv_opencv_imgcodecs_FRAMEWORKS )
set(opencv_opencv_imgcodecs_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_imgcodecs_DEPENDENCIES opencv::opencv_core opencv::opencv_imgproc ZLIB::ZLIB Eigen3::Eigen3 Jasper::Jasper PNG::PNG JPEG::JPEG TIFF::TIFF OpenEXR::OpenEXR WebP::WebP)
set(opencv_opencv_imgcodecs_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_videoio VARIABLES #############################################

set(opencv_opencv_videoio_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_videoio_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_videoio_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_videoio_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_videoio_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_videoio_DEFINITIONS )
set(opencv_opencv_videoio_COMPILE_DEFINITIONS )
set(opencv_opencv_videoio_COMPILE_OPTIONS_C "")
set(opencv_opencv_videoio_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_videoio_LIBS opencv_videoio451)
set(opencv_opencv_videoio_SYSTEM_LIBS )
set(opencv_opencv_videoio_FRAMEWORK_DIRS )
set(opencv_opencv_videoio_FRAMEWORKS )
set(opencv_opencv_videoio_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_videoio_DEPENDENCIES opencv::opencv_core opencv::opencv_imgproc opencv::opencv_imgcodecs Eigen3::Eigen3)
set(opencv_opencv_videoio_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_highgui VARIABLES #############################################

set(opencv_opencv_highgui_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_highgui_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_highgui_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_highgui_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_highgui_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_highgui_DEFINITIONS )
set(opencv_opencv_highgui_COMPILE_DEFINITIONS )
set(opencv_opencv_highgui_COMPILE_OPTIONS_C "")
set(opencv_opencv_highgui_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_highgui_LIBS opencv_highgui451)
set(opencv_opencv_highgui_SYSTEM_LIBS comctl32 gdi32 ole32 setupapi ws2_32 vfw32)
set(opencv_opencv_highgui_FRAMEWORK_DIRS )
set(opencv_opencv_highgui_FRAMEWORKS )
set(opencv_opencv_highgui_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_highgui_DEPENDENCIES opencv::opencv_core opencv::opencv_imgproc opencv::opencv_imgcodecs opencv::opencv_videoio Eigen3::Eigen3)
set(opencv_opencv_highgui_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT highgui VARIABLES #############################################

set(opencv_highgui_INCLUDE_DIRS )
set(opencv_highgui_INCLUDE_DIR "")
set(opencv_highgui_INCLUDES )
set(opencv_highgui_LIB_DIRS )
set(opencv_highgui_RES_DIRS )
set(opencv_highgui_DEFINITIONS )
set(opencv_highgui_COMPILE_DEFINITIONS )
set(opencv_highgui_COMPILE_OPTIONS_C "")
set(opencv_highgui_COMPILE_OPTIONS_CXX "")
set(opencv_highgui_LIBS )
set(opencv_highgui_SYSTEM_LIBS )
set(opencv_highgui_FRAMEWORK_DIRS )
set(opencv_highgui_FRAMEWORKS )
set(opencv_highgui_BUILD_MODULES_PATHS )
set(opencv_highgui_DEPENDENCIES opencv::opencv_highgui)
set(opencv_highgui_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT calib3d VARIABLES #############################################

set(opencv_calib3d_INCLUDE_DIRS )
set(opencv_calib3d_INCLUDE_DIR "")
set(opencv_calib3d_INCLUDES )
set(opencv_calib3d_LIB_DIRS )
set(opencv_calib3d_RES_DIRS )
set(opencv_calib3d_DEFINITIONS )
set(opencv_calib3d_COMPILE_DEFINITIONS )
set(opencv_calib3d_COMPILE_OPTIONS_C "")
set(opencv_calib3d_COMPILE_OPTIONS_CXX "")
set(opencv_calib3d_LIBS )
set(opencv_calib3d_SYSTEM_LIBS )
set(opencv_calib3d_FRAMEWORK_DIRS )
set(opencv_calib3d_FRAMEWORKS )
set(opencv_calib3d_BUILD_MODULES_PATHS )
set(opencv_calib3d_DEPENDENCIES opencv::opencv_calib3d)
set(opencv_calib3d_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT videoio VARIABLES #############################################

set(opencv_videoio_INCLUDE_DIRS )
set(opencv_videoio_INCLUDE_DIR "")
set(opencv_videoio_INCLUDES )
set(opencv_videoio_LIB_DIRS )
set(opencv_videoio_RES_DIRS )
set(opencv_videoio_DEFINITIONS )
set(opencv_videoio_COMPILE_DEFINITIONS )
set(opencv_videoio_COMPILE_OPTIONS_C "")
set(opencv_videoio_COMPILE_OPTIONS_CXX "")
set(opencv_videoio_LIBS )
set(opencv_videoio_SYSTEM_LIBS )
set(opencv_videoio_FRAMEWORK_DIRS )
set(opencv_videoio_FRAMEWORKS )
set(opencv_videoio_BUILD_MODULES_PATHS )
set(opencv_videoio_DEPENDENCIES opencv::opencv_videoio)
set(opencv_videoio_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT imgcodecs VARIABLES #############################################

set(opencv_imgcodecs_INCLUDE_DIRS )
set(opencv_imgcodecs_INCLUDE_DIR "")
set(opencv_imgcodecs_INCLUDES )
set(opencv_imgcodecs_LIB_DIRS )
set(opencv_imgcodecs_RES_DIRS )
set(opencv_imgcodecs_DEFINITIONS )
set(opencv_imgcodecs_COMPILE_DEFINITIONS )
set(opencv_imgcodecs_COMPILE_OPTIONS_C "")
set(opencv_imgcodecs_COMPILE_OPTIONS_CXX "")
set(opencv_imgcodecs_LIBS )
set(opencv_imgcodecs_SYSTEM_LIBS )
set(opencv_imgcodecs_FRAMEWORK_DIRS )
set(opencv_imgcodecs_FRAMEWORKS )
set(opencv_imgcodecs_BUILD_MODULES_PATHS )
set(opencv_imgcodecs_DEPENDENCIES opencv::opencv_imgcodecs)
set(opencv_imgcodecs_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT features2d VARIABLES #############################################

set(opencv_features2d_INCLUDE_DIRS )
set(opencv_features2d_INCLUDE_DIR "")
set(opencv_features2d_INCLUDES )
set(opencv_features2d_LIB_DIRS )
set(opencv_features2d_RES_DIRS )
set(opencv_features2d_DEFINITIONS )
set(opencv_features2d_COMPILE_DEFINITIONS )
set(opencv_features2d_COMPILE_OPTIONS_C "")
set(opencv_features2d_COMPILE_OPTIONS_CXX "")
set(opencv_features2d_LIBS )
set(opencv_features2d_SYSTEM_LIBS )
set(opencv_features2d_FRAMEWORK_DIRS )
set(opencv_features2d_FRAMEWORKS )
set(opencv_features2d_BUILD_MODULES_PATHS )
set(opencv_features2d_DEPENDENCIES opencv::opencv_features2d)
set(opencv_features2d_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_photo VARIABLES #############################################

set(opencv_opencv_photo_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_photo_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_photo_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_photo_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_photo_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_photo_DEFINITIONS )
set(opencv_opencv_photo_COMPILE_DEFINITIONS )
set(opencv_opencv_photo_COMPILE_OPTIONS_C "")
set(opencv_opencv_photo_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_photo_LIBS opencv_photo451)
set(opencv_opencv_photo_SYSTEM_LIBS )
set(opencv_opencv_photo_FRAMEWORK_DIRS )
set(opencv_opencv_photo_FRAMEWORKS )
set(opencv_opencv_photo_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_photo_DEPENDENCIES opencv::opencv_core opencv::opencv_imgproc Eigen3::Eigen3)
set(opencv_opencv_photo_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT photo VARIABLES #############################################

set(opencv_photo_INCLUDE_DIRS )
set(opencv_photo_INCLUDE_DIR "")
set(opencv_photo_INCLUDES )
set(opencv_photo_LIB_DIRS )
set(opencv_photo_RES_DIRS )
set(opencv_photo_DEFINITIONS )
set(opencv_photo_COMPILE_DEFINITIONS )
set(opencv_photo_COMPILE_OPTIONS_C "")
set(opencv_photo_COMPILE_OPTIONS_CXX "")
set(opencv_photo_LIBS )
set(opencv_photo_SYSTEM_LIBS )
set(opencv_photo_FRAMEWORK_DIRS )
set(opencv_photo_FRAMEWORKS )
set(opencv_photo_BUILD_MODULES_PATHS )
set(opencv_photo_DEPENDENCIES opencv::opencv_photo)
set(opencv_photo_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT opencv_ml VARIABLES #############################################

set(opencv_opencv_ml_INCLUDE_DIRS "C:/.conan/051250/1/include")
set(opencv_opencv_ml_INCLUDE_DIR "C:/.conan/051250/1/include")
set(opencv_opencv_ml_INCLUDES "C:/.conan/051250/1/include")
set(opencv_opencv_ml_LIB_DIRS "C:/.conan/051250/1/lib")
set(opencv_opencv_ml_RES_DIRS "C:/.conan/051250/1/res")
set(opencv_opencv_ml_DEFINITIONS )
set(opencv_opencv_ml_COMPILE_DEFINITIONS )
set(opencv_opencv_ml_COMPILE_OPTIONS_C "")
set(opencv_opencv_ml_COMPILE_OPTIONS_CXX "")
set(opencv_opencv_ml_LIBS opencv_ml451)
set(opencv_opencv_ml_SYSTEM_LIBS )
set(opencv_opencv_ml_FRAMEWORK_DIRS )
set(opencv_opencv_ml_FRAMEWORKS )
set(opencv_opencv_ml_BUILD_MODULES_PATHS "C:/.conan/051250/1/lib/cmake/conan-official-opencv-targets.cmake")
set(opencv_opencv_ml_DEPENDENCIES opencv::opencv_core Eigen3::Eigen3)
set(opencv_opencv_ml_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT ml VARIABLES #############################################

set(opencv_ml_INCLUDE_DIRS )
set(opencv_ml_INCLUDE_DIR "")
set(opencv_ml_INCLUDES )
set(opencv_ml_LIB_DIRS )
set(opencv_ml_RES_DIRS )
set(opencv_ml_DEFINITIONS )
set(opencv_ml_COMPILE_DEFINITIONS )
set(opencv_ml_COMPILE_OPTIONS_C "")
set(opencv_ml_COMPILE_OPTIONS_CXX "")
set(opencv_ml_LIBS )
set(opencv_ml_SYSTEM_LIBS )
set(opencv_ml_FRAMEWORK_DIRS )
set(opencv_ml_FRAMEWORKS )
set(opencv_ml_BUILD_MODULES_PATHS )
set(opencv_ml_DEPENDENCIES opencv::opencv_ml)
set(opencv_ml_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT imgproc VARIABLES #############################################

set(opencv_imgproc_INCLUDE_DIRS )
set(opencv_imgproc_INCLUDE_DIR "")
set(opencv_imgproc_INCLUDES )
set(opencv_imgproc_LIB_DIRS )
set(opencv_imgproc_RES_DIRS )
set(opencv_imgproc_DEFINITIONS )
set(opencv_imgproc_COMPILE_DEFINITIONS )
set(opencv_imgproc_COMPILE_OPTIONS_C "")
set(opencv_imgproc_COMPILE_OPTIONS_CXX "")
set(opencv_imgproc_LIBS )
set(opencv_imgproc_SYSTEM_LIBS )
set(opencv_imgproc_FRAMEWORK_DIRS )
set(opencv_imgproc_FRAMEWORKS )
set(opencv_imgproc_BUILD_MODULES_PATHS )
set(opencv_imgproc_DEPENDENCIES opencv::opencv_imgproc)
set(opencv_imgproc_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT flann VARIABLES #############################################

set(opencv_flann_INCLUDE_DIRS )
set(opencv_flann_INCLUDE_DIR "")
set(opencv_flann_INCLUDES )
set(opencv_flann_LIB_DIRS )
set(opencv_flann_RES_DIRS )
set(opencv_flann_DEFINITIONS )
set(opencv_flann_COMPILE_DEFINITIONS )
set(opencv_flann_COMPILE_OPTIONS_C "")
set(opencv_flann_COMPILE_OPTIONS_CXX "")
set(opencv_flann_LIBS )
set(opencv_flann_SYSTEM_LIBS )
set(opencv_flann_FRAMEWORK_DIRS )
set(opencv_flann_FRAMEWORKS )
set(opencv_flann_BUILD_MODULES_PATHS )
set(opencv_flann_DEPENDENCIES opencv::opencv_flann)
set(opencv_flann_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)

########### COMPONENT core VARIABLES #############################################

set(opencv_core_INCLUDE_DIRS )
set(opencv_core_INCLUDE_DIR "")
set(opencv_core_INCLUDES )
set(opencv_core_LIB_DIRS )
set(opencv_core_RES_DIRS )
set(opencv_core_DEFINITIONS )
set(opencv_core_COMPILE_DEFINITIONS )
set(opencv_core_COMPILE_OPTIONS_C "")
set(opencv_core_COMPILE_OPTIONS_CXX "")
set(opencv_core_LIBS )
set(opencv_core_SYSTEM_LIBS )
set(opencv_core_FRAMEWORK_DIRS )
set(opencv_core_FRAMEWORKS )
set(opencv_core_BUILD_MODULES_PATHS )
set(opencv_core_DEPENDENCIES opencv::opencv_core)
set(opencv_core_LINKER_FLAGS_LIST
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,SHARED_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,MODULE_LIBRARY>:>"
        "$<$<STREQUAL:$<TARGET_PROPERTY:TYPE>,EXECUTABLE>:>"
)


########## FIND PACKAGE DEPENDENCY ##########################################################
#############################################################################################

include(CMakeFindDependencyMacro)

if(NOT Eigen3_FOUND)
    find_dependency(Eigen3 REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency Eigen3 already found")
endif()

if(NOT ZLIB_FOUND)
    find_dependency(ZLIB REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency ZLIB already found")
endif()

if(NOT Jasper_FOUND)
    find_dependency(Jasper REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency Jasper already found")
endif()

if(NOT PNG_FOUND)
    find_dependency(PNG REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency PNG already found")
endif()

if(NOT JPEG_FOUND)
    find_dependency(JPEG REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency JPEG already found")
endif()

if(NOT TIFF_FOUND)
    find_dependency(TIFF REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency TIFF already found")
endif()

if(NOT OpenEXR_FOUND)
    find_dependency(OpenEXR REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency OpenEXR already found")
endif()

if(NOT WebP_FOUND)
    find_dependency(WebP REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency WebP already found")
endif()

if(NOT quirc_FOUND)
    find_dependency(quirc REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency quirc already found")
endif()

if(NOT Protobuf_FOUND)
    find_dependency(Protobuf REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency Protobuf already found")
endif()

if(NOT ade_FOUND)
    find_dependency(ade REQUIRED)
else()
    conan_message(STATUS "Conan: Dependency ade already found")
endif()


########## FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #######################################
#############################################################################################

########## COMPONENT opencv_core FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_core_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_core_FRAMEWORKS_FOUND "${opencv_opencv_core_FRAMEWORKS}" "${opencv_opencv_core_FRAMEWORK_DIRS}")

set(opencv_opencv_core_LIB_TARGETS "")
set(opencv_opencv_core_NOT_USED "")
set(opencv_opencv_core_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_core_FRAMEWORKS_FOUND} ${opencv_opencv_core_SYSTEM_LIBS} ${opencv_opencv_core_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_core_LIBS}"
                              "${opencv_opencv_core_LIB_DIRS}"
                              "${opencv_opencv_core_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_core_NOT_USED
                              opencv_opencv_core_LIB_TARGETS
                              ""
                              "opencv_opencv_core")

set(opencv_opencv_core_LINK_LIBS ${opencv_opencv_core_LIB_TARGETS} ${opencv_opencv_core_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_imgproc FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_imgproc_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_imgproc_FRAMEWORKS_FOUND "${opencv_opencv_imgproc_FRAMEWORKS}" "${opencv_opencv_imgproc_FRAMEWORK_DIRS}")

set(opencv_opencv_imgproc_LIB_TARGETS "")
set(opencv_opencv_imgproc_NOT_USED "")
set(opencv_opencv_imgproc_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_imgproc_FRAMEWORKS_FOUND} ${opencv_opencv_imgproc_SYSTEM_LIBS} ${opencv_opencv_imgproc_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_imgproc_LIBS}"
                              "${opencv_opencv_imgproc_LIB_DIRS}"
                              "${opencv_opencv_imgproc_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_imgproc_NOT_USED
                              opencv_opencv_imgproc_LIB_TARGETS
                              ""
                              "opencv_opencv_imgproc")

set(opencv_opencv_imgproc_LINK_LIBS ${opencv_opencv_imgproc_LIB_TARGETS} ${opencv_opencv_imgproc_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_flann FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_flann_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_flann_FRAMEWORKS_FOUND "${opencv_opencv_flann_FRAMEWORKS}" "${opencv_opencv_flann_FRAMEWORK_DIRS}")

set(opencv_opencv_flann_LIB_TARGETS "")
set(opencv_opencv_flann_NOT_USED "")
set(opencv_opencv_flann_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_flann_FRAMEWORKS_FOUND} ${opencv_opencv_flann_SYSTEM_LIBS} ${opencv_opencv_flann_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_flann_LIBS}"
                              "${opencv_opencv_flann_LIB_DIRS}"
                              "${opencv_opencv_flann_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_flann_NOT_USED
                              opencv_opencv_flann_LIB_TARGETS
                              ""
                              "opencv_opencv_flann")

set(opencv_opencv_flann_LINK_LIBS ${opencv_opencv_flann_LIB_TARGETS} ${opencv_opencv_flann_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_features2d FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_features2d_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_features2d_FRAMEWORKS_FOUND "${opencv_opencv_features2d_FRAMEWORKS}" "${opencv_opencv_features2d_FRAMEWORK_DIRS}")

set(opencv_opencv_features2d_LIB_TARGETS "")
set(opencv_opencv_features2d_NOT_USED "")
set(opencv_opencv_features2d_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_features2d_FRAMEWORKS_FOUND} ${opencv_opencv_features2d_SYSTEM_LIBS} ${opencv_opencv_features2d_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_features2d_LIBS}"
                              "${opencv_opencv_features2d_LIB_DIRS}"
                              "${opencv_opencv_features2d_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_features2d_NOT_USED
                              opencv_opencv_features2d_LIB_TARGETS
                              ""
                              "opencv_opencv_features2d")

set(opencv_opencv_features2d_LINK_LIBS ${opencv_opencv_features2d_LIB_TARGETS} ${opencv_opencv_features2d_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_calib3d FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_calib3d_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_calib3d_FRAMEWORKS_FOUND "${opencv_opencv_calib3d_FRAMEWORKS}" "${opencv_opencv_calib3d_FRAMEWORK_DIRS}")

set(opencv_opencv_calib3d_LIB_TARGETS "")
set(opencv_opencv_calib3d_NOT_USED "")
set(opencv_opencv_calib3d_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_calib3d_FRAMEWORKS_FOUND} ${opencv_opencv_calib3d_SYSTEM_LIBS} ${opencv_opencv_calib3d_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_calib3d_LIBS}"
                              "${opencv_opencv_calib3d_LIB_DIRS}"
                              "${opencv_opencv_calib3d_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_calib3d_NOT_USED
                              opencv_opencv_calib3d_LIB_TARGETS
                              ""
                              "opencv_opencv_calib3d")

set(opencv_opencv_calib3d_LINK_LIBS ${opencv_opencv_calib3d_LIB_TARGETS} ${opencv_opencv_calib3d_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_video FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_video_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_video_FRAMEWORKS_FOUND "${opencv_opencv_video_FRAMEWORKS}" "${opencv_opencv_video_FRAMEWORK_DIRS}")

set(opencv_opencv_video_LIB_TARGETS "")
set(opencv_opencv_video_NOT_USED "")
set(opencv_opencv_video_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_video_FRAMEWORKS_FOUND} ${opencv_opencv_video_SYSTEM_LIBS} ${opencv_opencv_video_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_video_LIBS}"
                              "${opencv_opencv_video_LIB_DIRS}"
                              "${opencv_opencv_video_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_video_NOT_USED
                              opencv_opencv_video_LIB_TARGETS
                              ""
                              "opencv_opencv_video")

set(opencv_opencv_video_LINK_LIBS ${opencv_opencv_video_LIB_TARGETS} ${opencv_opencv_video_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_gapi FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_gapi_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_gapi_FRAMEWORKS_FOUND "${opencv_opencv_gapi_FRAMEWORKS}" "${opencv_opencv_gapi_FRAMEWORK_DIRS}")

set(opencv_opencv_gapi_LIB_TARGETS "")
set(opencv_opencv_gapi_NOT_USED "")
set(opencv_opencv_gapi_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_gapi_FRAMEWORKS_FOUND} ${opencv_opencv_gapi_SYSTEM_LIBS} ${opencv_opencv_gapi_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_gapi_LIBS}"
                              "${opencv_opencv_gapi_LIB_DIRS}"
                              "${opencv_opencv_gapi_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_gapi_NOT_USED
                              opencv_opencv_gapi_LIB_TARGETS
                              ""
                              "opencv_opencv_gapi")

set(opencv_opencv_gapi_LINK_LIBS ${opencv_opencv_gapi_LIB_TARGETS} ${opencv_opencv_gapi_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT gapi FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_gapi_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_gapi_FRAMEWORKS_FOUND "${opencv_gapi_FRAMEWORKS}" "${opencv_gapi_FRAMEWORK_DIRS}")

set(opencv_gapi_LIB_TARGETS "")
set(opencv_gapi_NOT_USED "")
set(opencv_gapi_LIBS_FRAMEWORKS_DEPS ${opencv_gapi_FRAMEWORKS_FOUND} ${opencv_gapi_SYSTEM_LIBS} ${opencv_gapi_DEPENDENCIES})
conan_package_library_targets("${opencv_gapi_LIBS}"
                              "${opencv_gapi_LIB_DIRS}"
                              "${opencv_gapi_LIBS_FRAMEWORKS_DEPS}"
                              opencv_gapi_NOT_USED
                              opencv_gapi_LIB_TARGETS
                              ""
                              "opencv_gapi")

set(opencv_gapi_LINK_LIBS ${opencv_gapi_LIB_TARGETS} ${opencv_gapi_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_dnn FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_dnn_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_dnn_FRAMEWORKS_FOUND "${opencv_opencv_dnn_FRAMEWORKS}" "${opencv_opencv_dnn_FRAMEWORK_DIRS}")

set(opencv_opencv_dnn_LIB_TARGETS "")
set(opencv_opencv_dnn_NOT_USED "")
set(opencv_opencv_dnn_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_dnn_FRAMEWORKS_FOUND} ${opencv_opencv_dnn_SYSTEM_LIBS} ${opencv_opencv_dnn_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_dnn_LIBS}"
                              "${opencv_opencv_dnn_LIB_DIRS}"
                              "${opencv_opencv_dnn_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_dnn_NOT_USED
                              opencv_opencv_dnn_LIB_TARGETS
                              ""
                              "opencv_opencv_dnn")

set(opencv_opencv_dnn_LINK_LIBS ${opencv_opencv_dnn_LIB_TARGETS} ${opencv_opencv_dnn_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT dnn FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_dnn_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_dnn_FRAMEWORKS_FOUND "${opencv_dnn_FRAMEWORKS}" "${opencv_dnn_FRAMEWORK_DIRS}")

set(opencv_dnn_LIB_TARGETS "")
set(opencv_dnn_NOT_USED "")
set(opencv_dnn_LIBS_FRAMEWORKS_DEPS ${opencv_dnn_FRAMEWORKS_FOUND} ${opencv_dnn_SYSTEM_LIBS} ${opencv_dnn_DEPENDENCIES})
conan_package_library_targets("${opencv_dnn_LIBS}"
                              "${opencv_dnn_LIB_DIRS}"
                              "${opencv_dnn_LIBS_FRAMEWORKS_DEPS}"
                              opencv_dnn_NOT_USED
                              opencv_dnn_LIB_TARGETS
                              ""
                              "opencv_dnn")

set(opencv_dnn_LINK_LIBS ${opencv_dnn_LIB_TARGETS} ${opencv_dnn_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT video FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_video_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_video_FRAMEWORKS_FOUND "${opencv_video_FRAMEWORKS}" "${opencv_video_FRAMEWORK_DIRS}")

set(opencv_video_LIB_TARGETS "")
set(opencv_video_NOT_USED "")
set(opencv_video_LIBS_FRAMEWORKS_DEPS ${opencv_video_FRAMEWORKS_FOUND} ${opencv_video_SYSTEM_LIBS} ${opencv_video_DEPENDENCIES})
conan_package_library_targets("${opencv_video_LIBS}"
                              "${opencv_video_LIB_DIRS}"
                              "${opencv_video_LIBS_FRAMEWORKS_DEPS}"
                              opencv_video_NOT_USED
                              opencv_video_LIB_TARGETS
                              ""
                              "opencv_video")

set(opencv_video_LINK_LIBS ${opencv_video_LIB_TARGETS} ${opencv_video_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_stitching FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_stitching_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_stitching_FRAMEWORKS_FOUND "${opencv_opencv_stitching_FRAMEWORKS}" "${opencv_opencv_stitching_FRAMEWORK_DIRS}")

set(opencv_opencv_stitching_LIB_TARGETS "")
set(opencv_opencv_stitching_NOT_USED "")
set(opencv_opencv_stitching_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_stitching_FRAMEWORKS_FOUND} ${opencv_opencv_stitching_SYSTEM_LIBS} ${opencv_opencv_stitching_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_stitching_LIBS}"
                              "${opencv_opencv_stitching_LIB_DIRS}"
                              "${opencv_opencv_stitching_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_stitching_NOT_USED
                              opencv_opencv_stitching_LIB_TARGETS
                              ""
                              "opencv_opencv_stitching")

set(opencv_opencv_stitching_LINK_LIBS ${opencv_opencv_stitching_LIB_TARGETS} ${opencv_opencv_stitching_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT stitching FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_stitching_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_stitching_FRAMEWORKS_FOUND "${opencv_stitching_FRAMEWORKS}" "${opencv_stitching_FRAMEWORK_DIRS}")

set(opencv_stitching_LIB_TARGETS "")
set(opencv_stitching_NOT_USED "")
set(opencv_stitching_LIBS_FRAMEWORKS_DEPS ${opencv_stitching_FRAMEWORKS_FOUND} ${opencv_stitching_SYSTEM_LIBS} ${opencv_stitching_DEPENDENCIES})
conan_package_library_targets("${opencv_stitching_LIBS}"
                              "${opencv_stitching_LIB_DIRS}"
                              "${opencv_stitching_LIBS_FRAMEWORKS_DEPS}"
                              opencv_stitching_NOT_USED
                              opencv_stitching_LIB_TARGETS
                              ""
                              "opencv_stitching")

set(opencv_stitching_LINK_LIBS ${opencv_stitching_LIB_TARGETS} ${opencv_stitching_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_objdetect FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_objdetect_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_objdetect_FRAMEWORKS_FOUND "${opencv_opencv_objdetect_FRAMEWORKS}" "${opencv_opencv_objdetect_FRAMEWORK_DIRS}")

set(opencv_opencv_objdetect_LIB_TARGETS "")
set(opencv_opencv_objdetect_NOT_USED "")
set(opencv_opencv_objdetect_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_objdetect_FRAMEWORKS_FOUND} ${opencv_opencv_objdetect_SYSTEM_LIBS} ${opencv_opencv_objdetect_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_objdetect_LIBS}"
                              "${opencv_opencv_objdetect_LIB_DIRS}"
                              "${opencv_opencv_objdetect_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_objdetect_NOT_USED
                              opencv_opencv_objdetect_LIB_TARGETS
                              ""
                              "opencv_opencv_objdetect")

set(opencv_opencv_objdetect_LINK_LIBS ${opencv_opencv_objdetect_LIB_TARGETS} ${opencv_opencv_objdetect_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT objdetect FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_objdetect_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_objdetect_FRAMEWORKS_FOUND "${opencv_objdetect_FRAMEWORKS}" "${opencv_objdetect_FRAMEWORK_DIRS}")

set(opencv_objdetect_LIB_TARGETS "")
set(opencv_objdetect_NOT_USED "")
set(opencv_objdetect_LIBS_FRAMEWORKS_DEPS ${opencv_objdetect_FRAMEWORKS_FOUND} ${opencv_objdetect_SYSTEM_LIBS} ${opencv_objdetect_DEPENDENCIES})
conan_package_library_targets("${opencv_objdetect_LIBS}"
                              "${opencv_objdetect_LIB_DIRS}"
                              "${opencv_objdetect_LIBS_FRAMEWORKS_DEPS}"
                              opencv_objdetect_NOT_USED
                              opencv_objdetect_LIB_TARGETS
                              ""
                              "opencv_objdetect")

set(opencv_objdetect_LINK_LIBS ${opencv_objdetect_LIB_TARGETS} ${opencv_objdetect_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_imgcodecs FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_imgcodecs_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_imgcodecs_FRAMEWORKS_FOUND "${opencv_opencv_imgcodecs_FRAMEWORKS}" "${opencv_opencv_imgcodecs_FRAMEWORK_DIRS}")

set(opencv_opencv_imgcodecs_LIB_TARGETS "")
set(opencv_opencv_imgcodecs_NOT_USED "")
set(opencv_opencv_imgcodecs_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_imgcodecs_FRAMEWORKS_FOUND} ${opencv_opencv_imgcodecs_SYSTEM_LIBS} ${opencv_opencv_imgcodecs_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_imgcodecs_LIBS}"
                              "${opencv_opencv_imgcodecs_LIB_DIRS}"
                              "${opencv_opencv_imgcodecs_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_imgcodecs_NOT_USED
                              opencv_opencv_imgcodecs_LIB_TARGETS
                              ""
                              "opencv_opencv_imgcodecs")

set(opencv_opencv_imgcodecs_LINK_LIBS ${opencv_opencv_imgcodecs_LIB_TARGETS} ${opencv_opencv_imgcodecs_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_videoio FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_videoio_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_videoio_FRAMEWORKS_FOUND "${opencv_opencv_videoio_FRAMEWORKS}" "${opencv_opencv_videoio_FRAMEWORK_DIRS}")

set(opencv_opencv_videoio_LIB_TARGETS "")
set(opencv_opencv_videoio_NOT_USED "")
set(opencv_opencv_videoio_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_videoio_FRAMEWORKS_FOUND} ${opencv_opencv_videoio_SYSTEM_LIBS} ${opencv_opencv_videoio_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_videoio_LIBS}"
                              "${opencv_opencv_videoio_LIB_DIRS}"
                              "${opencv_opencv_videoio_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_videoio_NOT_USED
                              opencv_opencv_videoio_LIB_TARGETS
                              ""
                              "opencv_opencv_videoio")

set(opencv_opencv_videoio_LINK_LIBS ${opencv_opencv_videoio_LIB_TARGETS} ${opencv_opencv_videoio_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_highgui FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_highgui_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_highgui_FRAMEWORKS_FOUND "${opencv_opencv_highgui_FRAMEWORKS}" "${opencv_opencv_highgui_FRAMEWORK_DIRS}")

set(opencv_opencv_highgui_LIB_TARGETS "")
set(opencv_opencv_highgui_NOT_USED "")
set(opencv_opencv_highgui_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_highgui_FRAMEWORKS_FOUND} ${opencv_opencv_highgui_SYSTEM_LIBS} ${opencv_opencv_highgui_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_highgui_LIBS}"
                              "${opencv_opencv_highgui_LIB_DIRS}"
                              "${opencv_opencv_highgui_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_highgui_NOT_USED
                              opencv_opencv_highgui_LIB_TARGETS
                              ""
                              "opencv_opencv_highgui")

set(opencv_opencv_highgui_LINK_LIBS ${opencv_opencv_highgui_LIB_TARGETS} ${opencv_opencv_highgui_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT highgui FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_highgui_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_highgui_FRAMEWORKS_FOUND "${opencv_highgui_FRAMEWORKS}" "${opencv_highgui_FRAMEWORK_DIRS}")

set(opencv_highgui_LIB_TARGETS "")
set(opencv_highgui_NOT_USED "")
set(opencv_highgui_LIBS_FRAMEWORKS_DEPS ${opencv_highgui_FRAMEWORKS_FOUND} ${opencv_highgui_SYSTEM_LIBS} ${opencv_highgui_DEPENDENCIES})
conan_package_library_targets("${opencv_highgui_LIBS}"
                              "${opencv_highgui_LIB_DIRS}"
                              "${opencv_highgui_LIBS_FRAMEWORKS_DEPS}"
                              opencv_highgui_NOT_USED
                              opencv_highgui_LIB_TARGETS
                              ""
                              "opencv_highgui")

set(opencv_highgui_LINK_LIBS ${opencv_highgui_LIB_TARGETS} ${opencv_highgui_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT calib3d FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_calib3d_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_calib3d_FRAMEWORKS_FOUND "${opencv_calib3d_FRAMEWORKS}" "${opencv_calib3d_FRAMEWORK_DIRS}")

set(opencv_calib3d_LIB_TARGETS "")
set(opencv_calib3d_NOT_USED "")
set(opencv_calib3d_LIBS_FRAMEWORKS_DEPS ${opencv_calib3d_FRAMEWORKS_FOUND} ${opencv_calib3d_SYSTEM_LIBS} ${opencv_calib3d_DEPENDENCIES})
conan_package_library_targets("${opencv_calib3d_LIBS}"
                              "${opencv_calib3d_LIB_DIRS}"
                              "${opencv_calib3d_LIBS_FRAMEWORKS_DEPS}"
                              opencv_calib3d_NOT_USED
                              opencv_calib3d_LIB_TARGETS
                              ""
                              "opencv_calib3d")

set(opencv_calib3d_LINK_LIBS ${opencv_calib3d_LIB_TARGETS} ${opencv_calib3d_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT videoio FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_videoio_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_videoio_FRAMEWORKS_FOUND "${opencv_videoio_FRAMEWORKS}" "${opencv_videoio_FRAMEWORK_DIRS}")

set(opencv_videoio_LIB_TARGETS "")
set(opencv_videoio_NOT_USED "")
set(opencv_videoio_LIBS_FRAMEWORKS_DEPS ${opencv_videoio_FRAMEWORKS_FOUND} ${opencv_videoio_SYSTEM_LIBS} ${opencv_videoio_DEPENDENCIES})
conan_package_library_targets("${opencv_videoio_LIBS}"
                              "${opencv_videoio_LIB_DIRS}"
                              "${opencv_videoio_LIBS_FRAMEWORKS_DEPS}"
                              opencv_videoio_NOT_USED
                              opencv_videoio_LIB_TARGETS
                              ""
                              "opencv_videoio")

set(opencv_videoio_LINK_LIBS ${opencv_videoio_LIB_TARGETS} ${opencv_videoio_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT imgcodecs FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_imgcodecs_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_imgcodecs_FRAMEWORKS_FOUND "${opencv_imgcodecs_FRAMEWORKS}" "${opencv_imgcodecs_FRAMEWORK_DIRS}")

set(opencv_imgcodecs_LIB_TARGETS "")
set(opencv_imgcodecs_NOT_USED "")
set(opencv_imgcodecs_LIBS_FRAMEWORKS_DEPS ${opencv_imgcodecs_FRAMEWORKS_FOUND} ${opencv_imgcodecs_SYSTEM_LIBS} ${opencv_imgcodecs_DEPENDENCIES})
conan_package_library_targets("${opencv_imgcodecs_LIBS}"
                              "${opencv_imgcodecs_LIB_DIRS}"
                              "${opencv_imgcodecs_LIBS_FRAMEWORKS_DEPS}"
                              opencv_imgcodecs_NOT_USED
                              opencv_imgcodecs_LIB_TARGETS
                              ""
                              "opencv_imgcodecs")

set(opencv_imgcodecs_LINK_LIBS ${opencv_imgcodecs_LIB_TARGETS} ${opencv_imgcodecs_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT features2d FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_features2d_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_features2d_FRAMEWORKS_FOUND "${opencv_features2d_FRAMEWORKS}" "${opencv_features2d_FRAMEWORK_DIRS}")

set(opencv_features2d_LIB_TARGETS "")
set(opencv_features2d_NOT_USED "")
set(opencv_features2d_LIBS_FRAMEWORKS_DEPS ${opencv_features2d_FRAMEWORKS_FOUND} ${opencv_features2d_SYSTEM_LIBS} ${opencv_features2d_DEPENDENCIES})
conan_package_library_targets("${opencv_features2d_LIBS}"
                              "${opencv_features2d_LIB_DIRS}"
                              "${opencv_features2d_LIBS_FRAMEWORKS_DEPS}"
                              opencv_features2d_NOT_USED
                              opencv_features2d_LIB_TARGETS
                              ""
                              "opencv_features2d")

set(opencv_features2d_LINK_LIBS ${opencv_features2d_LIB_TARGETS} ${opencv_features2d_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_photo FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_photo_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_photo_FRAMEWORKS_FOUND "${opencv_opencv_photo_FRAMEWORKS}" "${opencv_opencv_photo_FRAMEWORK_DIRS}")

set(opencv_opencv_photo_LIB_TARGETS "")
set(opencv_opencv_photo_NOT_USED "")
set(opencv_opencv_photo_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_photo_FRAMEWORKS_FOUND} ${opencv_opencv_photo_SYSTEM_LIBS} ${opencv_opencv_photo_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_photo_LIBS}"
                              "${opencv_opencv_photo_LIB_DIRS}"
                              "${opencv_opencv_photo_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_photo_NOT_USED
                              opencv_opencv_photo_LIB_TARGETS
                              ""
                              "opencv_opencv_photo")

set(opencv_opencv_photo_LINK_LIBS ${opencv_opencv_photo_LIB_TARGETS} ${opencv_opencv_photo_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT photo FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_photo_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_photo_FRAMEWORKS_FOUND "${opencv_photo_FRAMEWORKS}" "${opencv_photo_FRAMEWORK_DIRS}")

set(opencv_photo_LIB_TARGETS "")
set(opencv_photo_NOT_USED "")
set(opencv_photo_LIBS_FRAMEWORKS_DEPS ${opencv_photo_FRAMEWORKS_FOUND} ${opencv_photo_SYSTEM_LIBS} ${opencv_photo_DEPENDENCIES})
conan_package_library_targets("${opencv_photo_LIBS}"
                              "${opencv_photo_LIB_DIRS}"
                              "${opencv_photo_LIBS_FRAMEWORKS_DEPS}"
                              opencv_photo_NOT_USED
                              opencv_photo_LIB_TARGETS
                              ""
                              "opencv_photo")

set(opencv_photo_LINK_LIBS ${opencv_photo_LIB_TARGETS} ${opencv_photo_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT opencv_ml FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_opencv_ml_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_opencv_ml_FRAMEWORKS_FOUND "${opencv_opencv_ml_FRAMEWORKS}" "${opencv_opencv_ml_FRAMEWORK_DIRS}")

set(opencv_opencv_ml_LIB_TARGETS "")
set(opencv_opencv_ml_NOT_USED "")
set(opencv_opencv_ml_LIBS_FRAMEWORKS_DEPS ${opencv_opencv_ml_FRAMEWORKS_FOUND} ${opencv_opencv_ml_SYSTEM_LIBS} ${opencv_opencv_ml_DEPENDENCIES})
conan_package_library_targets("${opencv_opencv_ml_LIBS}"
                              "${opencv_opencv_ml_LIB_DIRS}"
                              "${opencv_opencv_ml_LIBS_FRAMEWORKS_DEPS}"
                              opencv_opencv_ml_NOT_USED
                              opencv_opencv_ml_LIB_TARGETS
                              ""
                              "opencv_opencv_ml")

set(opencv_opencv_ml_LINK_LIBS ${opencv_opencv_ml_LIB_TARGETS} ${opencv_opencv_ml_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/"
			"C:/.conan/051250/1/lib/cmake" ${CMAKE_PREFIX_PATH})

########## COMPONENT ml FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_ml_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_ml_FRAMEWORKS_FOUND "${opencv_ml_FRAMEWORKS}" "${opencv_ml_FRAMEWORK_DIRS}")

set(opencv_ml_LIB_TARGETS "")
set(opencv_ml_NOT_USED "")
set(opencv_ml_LIBS_FRAMEWORKS_DEPS ${opencv_ml_FRAMEWORKS_FOUND} ${opencv_ml_SYSTEM_LIBS} ${opencv_ml_DEPENDENCIES})
conan_package_library_targets("${opencv_ml_LIBS}"
                              "${opencv_ml_LIB_DIRS}"
                              "${opencv_ml_LIBS_FRAMEWORKS_DEPS}"
                              opencv_ml_NOT_USED
                              opencv_ml_LIB_TARGETS
                              ""
                              "opencv_ml")

set(opencv_ml_LINK_LIBS ${opencv_ml_LIB_TARGETS} ${opencv_ml_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT imgproc FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_imgproc_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_imgproc_FRAMEWORKS_FOUND "${opencv_imgproc_FRAMEWORKS}" "${opencv_imgproc_FRAMEWORK_DIRS}")

set(opencv_imgproc_LIB_TARGETS "")
set(opencv_imgproc_NOT_USED "")
set(opencv_imgproc_LIBS_FRAMEWORKS_DEPS ${opencv_imgproc_FRAMEWORKS_FOUND} ${opencv_imgproc_SYSTEM_LIBS} ${opencv_imgproc_DEPENDENCIES})
conan_package_library_targets("${opencv_imgproc_LIBS}"
                              "${opencv_imgproc_LIB_DIRS}"
                              "${opencv_imgproc_LIBS_FRAMEWORKS_DEPS}"
                              opencv_imgproc_NOT_USED
                              opencv_imgproc_LIB_TARGETS
                              ""
                              "opencv_imgproc")

set(opencv_imgproc_LINK_LIBS ${opencv_imgproc_LIB_TARGETS} ${opencv_imgproc_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT flann FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_flann_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_flann_FRAMEWORKS_FOUND "${opencv_flann_FRAMEWORKS}" "${opencv_flann_FRAMEWORK_DIRS}")

set(opencv_flann_LIB_TARGETS "")
set(opencv_flann_NOT_USED "")
set(opencv_flann_LIBS_FRAMEWORKS_DEPS ${opencv_flann_FRAMEWORKS_FOUND} ${opencv_flann_SYSTEM_LIBS} ${opencv_flann_DEPENDENCIES})
conan_package_library_targets("${opencv_flann_LIBS}"
                              "${opencv_flann_LIB_DIRS}"
                              "${opencv_flann_LIBS_FRAMEWORKS_DEPS}"
                              opencv_flann_NOT_USED
                              opencv_flann_LIB_TARGETS
                              ""
                              "opencv_flann")

set(opencv_flann_LINK_LIBS ${opencv_flann_LIB_TARGETS} ${opencv_flann_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})

########## COMPONENT core FIND LIBRARIES & FRAMEWORKS / DYNAMIC VARS #############

set(opencv_core_FRAMEWORKS_FOUND "")
conan_find_apple_frameworks(opencv_core_FRAMEWORKS_FOUND "${opencv_core_FRAMEWORKS}" "${opencv_core_FRAMEWORK_DIRS}")

set(opencv_core_LIB_TARGETS "")
set(opencv_core_NOT_USED "")
set(opencv_core_LIBS_FRAMEWORKS_DEPS ${opencv_core_FRAMEWORKS_FOUND} ${opencv_core_SYSTEM_LIBS} ${opencv_core_DEPENDENCIES})
conan_package_library_targets("${opencv_core_LIBS}"
                              "${opencv_core_LIB_DIRS}"
                              "${opencv_core_LIBS_FRAMEWORKS_DEPS}"
                              opencv_core_NOT_USED
                              opencv_core_LIB_TARGETS
                              ""
                              "opencv_core")

set(opencv_core_LINK_LIBS ${opencv_core_LIB_TARGETS} ${opencv_core_LIBS_FRAMEWORKS_DEPS})

set(CMAKE_MODULE_PATH "C:/.conan/051250/1/" ${CMAKE_MODULE_PATH})
set(CMAKE_PREFIX_PATH "C:/.conan/051250/1/" ${CMAKE_PREFIX_PATH})


########## TARGETS ##########################################################################
#############################################################################################

########## COMPONENT opencv_core TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_core)
        add_library(opencv::opencv_core INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_core PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_core_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_core PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_core_LIB_DIRS}")
        set_target_properties(opencv::opencv_core PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_core_LINK_LIBS};${opencv_opencv_core_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_core PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_core_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_core PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_core_COMPILE_OPTIONS_C};${opencv_opencv_core_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_imgproc TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_imgproc)
        add_library(opencv::opencv_imgproc INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_imgproc PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_imgproc_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_imgproc PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_imgproc_LIB_DIRS}")
        set_target_properties(opencv::opencv_imgproc PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_imgproc_LINK_LIBS};${opencv_opencv_imgproc_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_imgproc PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_imgproc_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_imgproc PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_imgproc_COMPILE_OPTIONS_C};${opencv_opencv_imgproc_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_flann TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_flann)
        add_library(opencv::opencv_flann INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_flann PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_flann_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_flann PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_flann_LIB_DIRS}")
        set_target_properties(opencv::opencv_flann PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_flann_LINK_LIBS};${opencv_opencv_flann_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_flann PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_flann_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_flann PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_flann_COMPILE_OPTIONS_C};${opencv_opencv_flann_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_features2d TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_features2d)
        add_library(opencv::opencv_features2d INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_features2d PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_features2d_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_features2d PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_features2d_LIB_DIRS}")
        set_target_properties(opencv::opencv_features2d PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_features2d_LINK_LIBS};${opencv_opencv_features2d_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_features2d PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_features2d_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_features2d PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_features2d_COMPILE_OPTIONS_C};${opencv_opencv_features2d_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_calib3d TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_calib3d)
        add_library(opencv::opencv_calib3d INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_calib3d PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_calib3d_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_calib3d PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_calib3d_LIB_DIRS}")
        set_target_properties(opencv::opencv_calib3d PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_calib3d_LINK_LIBS};${opencv_opencv_calib3d_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_calib3d PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_calib3d_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_calib3d PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_calib3d_COMPILE_OPTIONS_C};${opencv_opencv_calib3d_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_video TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_video)
        add_library(opencv::opencv_video INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_video PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_video_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_video PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_video_LIB_DIRS}")
        set_target_properties(opencv::opencv_video PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_video_LINK_LIBS};${opencv_opencv_video_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_video PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_video_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_video PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_video_COMPILE_OPTIONS_C};${opencv_opencv_video_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_gapi TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_gapi)
        add_library(opencv::opencv_gapi INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_gapi PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_gapi_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_gapi PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_gapi_LIB_DIRS}")
        set_target_properties(opencv::opencv_gapi PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_gapi_LINK_LIBS};${opencv_opencv_gapi_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_gapi PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_gapi_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_gapi PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_gapi_COMPILE_OPTIONS_C};${opencv_opencv_gapi_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT gapi TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::gapi)
        add_library(opencv::gapi INTERFACE IMPORTED)
        set_target_properties(opencv::gapi PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_gapi_INCLUDE_DIRS}")
        set_target_properties(opencv::gapi PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_gapi_LIB_DIRS}")
        set_target_properties(opencv::gapi PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_gapi_LINK_LIBS};${opencv_gapi_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::gapi PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_gapi_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::gapi PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_gapi_COMPILE_OPTIONS_C};${opencv_gapi_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_dnn TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_dnn)
        add_library(opencv::opencv_dnn INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_dnn PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_dnn_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_dnn PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_dnn_LIB_DIRS}")
        set_target_properties(opencv::opencv_dnn PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_dnn_LINK_LIBS};${opencv_opencv_dnn_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_dnn PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_dnn_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_dnn PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_dnn_COMPILE_OPTIONS_C};${opencv_opencv_dnn_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT dnn TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::dnn)
        add_library(opencv::dnn INTERFACE IMPORTED)
        set_target_properties(opencv::dnn PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_dnn_INCLUDE_DIRS}")
        set_target_properties(opencv::dnn PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_dnn_LIB_DIRS}")
        set_target_properties(opencv::dnn PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_dnn_LINK_LIBS};${opencv_dnn_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::dnn PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_dnn_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::dnn PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_dnn_COMPILE_OPTIONS_C};${opencv_dnn_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT video TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::video)
        add_library(opencv::video INTERFACE IMPORTED)
        set_target_properties(opencv::video PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_video_INCLUDE_DIRS}")
        set_target_properties(opencv::video PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_video_LIB_DIRS}")
        set_target_properties(opencv::video PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_video_LINK_LIBS};${opencv_video_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::video PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_video_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::video PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_video_COMPILE_OPTIONS_C};${opencv_video_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_stitching TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_stitching)
        add_library(opencv::opencv_stitching INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_stitching PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_stitching_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_stitching PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_stitching_LIB_DIRS}")
        set_target_properties(opencv::opencv_stitching PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_stitching_LINK_LIBS};${opencv_opencv_stitching_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_stitching PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_stitching_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_stitching PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_stitching_COMPILE_OPTIONS_C};${opencv_opencv_stitching_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT stitching TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::stitching)
        add_library(opencv::stitching INTERFACE IMPORTED)
        set_target_properties(opencv::stitching PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_stitching_INCLUDE_DIRS}")
        set_target_properties(opencv::stitching PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_stitching_LIB_DIRS}")
        set_target_properties(opencv::stitching PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_stitching_LINK_LIBS};${opencv_stitching_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::stitching PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_stitching_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::stitching PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_stitching_COMPILE_OPTIONS_C};${opencv_stitching_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_objdetect TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_objdetect)
        add_library(opencv::opencv_objdetect INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_objdetect PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_objdetect_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_objdetect PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_objdetect_LIB_DIRS}")
        set_target_properties(opencv::opencv_objdetect PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_objdetect_LINK_LIBS};${opencv_opencv_objdetect_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_objdetect PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_objdetect_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_objdetect PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_objdetect_COMPILE_OPTIONS_C};${opencv_opencv_objdetect_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT objdetect TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::objdetect)
        add_library(opencv::objdetect INTERFACE IMPORTED)
        set_target_properties(opencv::objdetect PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_objdetect_INCLUDE_DIRS}")
        set_target_properties(opencv::objdetect PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_objdetect_LIB_DIRS}")
        set_target_properties(opencv::objdetect PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_objdetect_LINK_LIBS};${opencv_objdetect_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::objdetect PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_objdetect_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::objdetect PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_objdetect_COMPILE_OPTIONS_C};${opencv_objdetect_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_imgcodecs TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_imgcodecs)
        add_library(opencv::opencv_imgcodecs INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_imgcodecs PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_imgcodecs_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_imgcodecs PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_imgcodecs_LIB_DIRS}")
        set_target_properties(opencv::opencv_imgcodecs PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_imgcodecs_LINK_LIBS};${opencv_opencv_imgcodecs_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_imgcodecs PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_imgcodecs_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_imgcodecs PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_imgcodecs_COMPILE_OPTIONS_C};${opencv_opencv_imgcodecs_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_videoio TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_videoio)
        add_library(opencv::opencv_videoio INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_videoio PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_videoio_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_videoio PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_videoio_LIB_DIRS}")
        set_target_properties(opencv::opencv_videoio PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_videoio_LINK_LIBS};${opencv_opencv_videoio_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_videoio PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_videoio_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_videoio PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_videoio_COMPILE_OPTIONS_C};${opencv_opencv_videoio_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_highgui TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_highgui)
        add_library(opencv::opencv_highgui INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_highgui PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_highgui_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_highgui PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_highgui_LIB_DIRS}")
        set_target_properties(opencv::opencv_highgui PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_highgui_LINK_LIBS};${opencv_opencv_highgui_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_highgui PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_highgui_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_highgui PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_highgui_COMPILE_OPTIONS_C};${opencv_opencv_highgui_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT highgui TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::highgui)
        add_library(opencv::highgui INTERFACE IMPORTED)
        set_target_properties(opencv::highgui PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_highgui_INCLUDE_DIRS}")
        set_target_properties(opencv::highgui PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_highgui_LIB_DIRS}")
        set_target_properties(opencv::highgui PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_highgui_LINK_LIBS};${opencv_highgui_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::highgui PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_highgui_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::highgui PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_highgui_COMPILE_OPTIONS_C};${opencv_highgui_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT calib3d TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::calib3d)
        add_library(opencv::calib3d INTERFACE IMPORTED)
        set_target_properties(opencv::calib3d PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_calib3d_INCLUDE_DIRS}")
        set_target_properties(opencv::calib3d PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_calib3d_LIB_DIRS}")
        set_target_properties(opencv::calib3d PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_calib3d_LINK_LIBS};${opencv_calib3d_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::calib3d PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_calib3d_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::calib3d PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_calib3d_COMPILE_OPTIONS_C};${opencv_calib3d_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT videoio TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::videoio)
        add_library(opencv::videoio INTERFACE IMPORTED)
        set_target_properties(opencv::videoio PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_videoio_INCLUDE_DIRS}")
        set_target_properties(opencv::videoio PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_videoio_LIB_DIRS}")
        set_target_properties(opencv::videoio PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_videoio_LINK_LIBS};${opencv_videoio_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::videoio PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_videoio_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::videoio PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_videoio_COMPILE_OPTIONS_C};${opencv_videoio_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT imgcodecs TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::imgcodecs)
        add_library(opencv::imgcodecs INTERFACE IMPORTED)
        set_target_properties(opencv::imgcodecs PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_imgcodecs_INCLUDE_DIRS}")
        set_target_properties(opencv::imgcodecs PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_imgcodecs_LIB_DIRS}")
        set_target_properties(opencv::imgcodecs PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_imgcodecs_LINK_LIBS};${opencv_imgcodecs_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::imgcodecs PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_imgcodecs_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::imgcodecs PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_imgcodecs_COMPILE_OPTIONS_C};${opencv_imgcodecs_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT features2d TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::features2d)
        add_library(opencv::features2d INTERFACE IMPORTED)
        set_target_properties(opencv::features2d PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_features2d_INCLUDE_DIRS}")
        set_target_properties(opencv::features2d PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_features2d_LIB_DIRS}")
        set_target_properties(opencv::features2d PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_features2d_LINK_LIBS};${opencv_features2d_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::features2d PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_features2d_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::features2d PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_features2d_COMPILE_OPTIONS_C};${opencv_features2d_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_photo TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_photo)
        add_library(opencv::opencv_photo INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_photo PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_photo_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_photo PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_photo_LIB_DIRS}")
        set_target_properties(opencv::opencv_photo PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_photo_LINK_LIBS};${opencv_opencv_photo_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_photo PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_photo_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_photo PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_photo_COMPILE_OPTIONS_C};${opencv_opencv_photo_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT photo TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::photo)
        add_library(opencv::photo INTERFACE IMPORTED)
        set_target_properties(opencv::photo PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_photo_INCLUDE_DIRS}")
        set_target_properties(opencv::photo PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_photo_LIB_DIRS}")
        set_target_properties(opencv::photo PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_photo_LINK_LIBS};${opencv_photo_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::photo PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_photo_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::photo PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_photo_COMPILE_OPTIONS_C};${opencv_photo_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT opencv_ml TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::opencv_ml)
        add_library(opencv::opencv_ml INTERFACE IMPORTED)
        set_target_properties(opencv::opencv_ml PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_opencv_ml_INCLUDE_DIRS}")
        set_target_properties(opencv::opencv_ml PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_opencv_ml_LIB_DIRS}")
        set_target_properties(opencv::opencv_ml PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_opencv_ml_LINK_LIBS};${opencv_opencv_ml_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::opencv_ml PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_opencv_ml_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::opencv_ml PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_opencv_ml_COMPILE_OPTIONS_C};${opencv_opencv_ml_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT ml TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::ml)
        add_library(opencv::ml INTERFACE IMPORTED)
        set_target_properties(opencv::ml PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_ml_INCLUDE_DIRS}")
        set_target_properties(opencv::ml PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_ml_LIB_DIRS}")
        set_target_properties(opencv::ml PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_ml_LINK_LIBS};${opencv_ml_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::ml PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_ml_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::ml PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_ml_COMPILE_OPTIONS_C};${opencv_ml_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT imgproc TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::imgproc)
        add_library(opencv::imgproc INTERFACE IMPORTED)
        set_target_properties(opencv::imgproc PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_imgproc_INCLUDE_DIRS}")
        set_target_properties(opencv::imgproc PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_imgproc_LIB_DIRS}")
        set_target_properties(opencv::imgproc PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_imgproc_LINK_LIBS};${opencv_imgproc_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::imgproc PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_imgproc_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::imgproc PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_imgproc_COMPILE_OPTIONS_C};${opencv_imgproc_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT flann TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::flann)
        add_library(opencv::flann INTERFACE IMPORTED)
        set_target_properties(opencv::flann PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_flann_INCLUDE_DIRS}")
        set_target_properties(opencv::flann PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_flann_LIB_DIRS}")
        set_target_properties(opencv::flann PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_flann_LINK_LIBS};${opencv_flann_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::flann PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_flann_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::flann PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_flann_COMPILE_OPTIONS_C};${opencv_flann_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## COMPONENT core TARGET #################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    # Target approach
    if(NOT TARGET opencv::core)
        add_library(opencv::core INTERFACE IMPORTED)
        set_target_properties(opencv::core PROPERTIES INTERFACE_INCLUDE_DIRECTORIES
                              "${opencv_core_INCLUDE_DIRS}")
        set_target_properties(opencv::core PROPERTIES INTERFACE_LINK_DIRECTORIES
                              "${opencv_core_LIB_DIRS}")
        set_target_properties(opencv::core PROPERTIES INTERFACE_LINK_LIBRARIES
                              "${opencv_core_LINK_LIBS};${opencv_core_LINKER_FLAGS_LIST}")
        set_target_properties(opencv::core PROPERTIES INTERFACE_COMPILE_DEFINITIONS
                              "${opencv_core_COMPILE_DEFINITIONS}")
        set_target_properties(opencv::core PROPERTIES INTERFACE_COMPILE_OPTIONS
                              "${opencv_core_COMPILE_OPTIONS_C};${opencv_core_COMPILE_OPTIONS_CXX}")
    endif()
endif()

########## GLOBAL TARGET ####################################################################

if(NOT ${CMAKE_VERSION} VERSION_LESS "3.0")
    if(NOT TARGET opencv::opencv)
        add_library(opencv::opencv INTERFACE IMPORTED)
    endif()
    set_property(TARGET opencv::opencv APPEND PROPERTY
                 INTERFACE_LINK_LIBRARIES "${opencv_COMPONENTS}")
endif()

########## BUILD MODULES ####################################################################
#############################################################################################
########## COMPONENT opencv_core BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_core_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_imgproc BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_imgproc_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_flann BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_flann_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_features2d BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_features2d_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_calib3d BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_calib3d_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_video BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_video_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_gapi BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_gapi_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT gapi BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_gapi_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_dnn BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_dnn_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT dnn BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_dnn_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT video BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_video_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_stitching BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_stitching_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT stitching BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_stitching_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_objdetect BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_objdetect_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT objdetect BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_objdetect_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_imgcodecs BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_imgcodecs_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_videoio BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_videoio_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_highgui BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_highgui_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT highgui BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_highgui_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT calib3d BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_calib3d_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT videoio BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_videoio_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT imgcodecs BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_imgcodecs_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT features2d BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_features2d_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_photo BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_photo_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT photo BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_photo_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT opencv_ml BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_opencv_ml_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT ml BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_ml_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT imgproc BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_imgproc_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT flann BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_flann_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
########## COMPONENT core BUILD MODULES ##########################################

foreach(_BUILD_MODULE_PATH ${opencv_core_BUILD_MODULES_PATHS})
    include(${_BUILD_MODULE_PATH})
endforeach()
